# Variables can store data of different types, and different types can do different things.
print('Python has the following data types built-in by default, in these categories:')
print('Text Type : str')
print('Numeric Type : int,float,complex')
print('Sequence Type : list,tuple,range')
print('Mapping Type : dict')
print('Set Types : set, frozenset')
print('Boolean Type : bool')
print('Binary Types : bytes,bytearray,memoryview')
print('Non Type : NonType')
# Getting the Data Type
x = 50
print(type(x))
print('<----------Setting the Data Type----------->')
x = 'chandra'
print(type(x))
x = 23
print(type(x))
x = 34.5
print(type(x))
y = 40
x = 1j
print(type(x))
x = ['chandra', 'python', 'developer']
print(type(x))
x = ('chandra', 'python', 'developer')
print(type(x))
x = range(6)
print(type(x))
x = {"name": 'chandra', "technology": 'python', "Role": 'developer', "age": 25}
print(type(x))
x= {'chandra', 'python', 'developer'}
print(type(x))
x = frozenset({'chandra', 'python', 'developer'})
print(type(x))
x = True
print(type(x))
x = b'Hello'
print(type(x))
x = bytearray(5)
print(type(x))
x = memoryview(bytes(5))
print(type(x))
x = None
print(type(x))

print('<---------Setting the Specific Data Type--------->')
y = str("Hello, Chandra")
print(y)
print(type(y))
y = int(20)
print(y)
print(type(y))
y = float(30)
print(y)
print(type(y))
y = complex(2j)
print(y)
print(type(y))
y = list(('chandra', 'is', 'from', 'andhra'))
print(y)
print(type(y))
y = tuple(('chandra', 'is', 'from', 'andhra'))
print(y)
print(type(y))
y = range(6)
print(y)
print(type(y))
y = dict(name= 'chandra', technology= 'python', Role= 'developer', age= 25)
print(y)
print(type(y))
y = set(("chandra", 'python', 'developer'))
print(y)
print(type(y))
y = frozenset(('chandra', 'ETL', 'developer'))
print(y)
print(type(y))
y = bool(5)
print(y)
print(type(y))
y = bytes(5)
print(y)
print(type(y))
y = bytearray(5)
print(y)
print(type(y))
y = memoryview(bytes(1))
print(y)
print(type(y))

